---
import Layout from "../../layouts/Layout.astro";
import Form from "../../components/Form.vue"

const { id } = Astro.params;
const url = Astro.url
const publicApi = import.meta.env.PUBLIC_API_URL;

const fetchData = async () => {
  const response = await fetch( publicApi+'/api/propiedades/'+id+'?populate=*');
  const data = await response.json();
  return data;
};


const dataPropiedad = await fetchData();
const { nombre , precio, descripcion , detalles , imagen, piscina } = dataPropiedad.data.attributes
const propiedad = dataPropiedad.data


---
<Layout title= {nombre} >
<h1> {nombre} </h1>
<img class="image-container" src={  publicApi+imagen.data.attributes.url } alt={nombre}  />
<h2> {descripcion} </h2>
<h3> {precio} </h3>
<p> {detalles}</p>
<ul>
{ piscina ? <li>   <p>piscina</p>   </li> : <p></p>  }    
</ul>
</Layout>

<Form  client:load/>

 
 
<style>
 
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
